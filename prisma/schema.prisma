generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @unique @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?   @default("name")
  email         String?   @unique
  emailVerified DateTime?
  image         String?   @default("https://nockgnasolvxkfacuzmm.supabase.co/storage/v1/object/public/smileapp/Assets/default-user-image.jpg")
  accounts      Account[]
  sessions      Session[]
  rounds        Round[]
  wins          Int       @default(0)
  losses        Int       @default(0)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Round {
  id           String   @id @default(cuid())
  solutionLink String
  solution     Int
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  success      Boolean
  finishedAt   DateTime @default(now()) @db.Timestamptz(3)
  timeTaken    Float?

  LevelWinsRelation    Level[] @relation("levelRounds")
  LevelFastestRelation Level[] @relation("levelFastest")

  @@index([userId])
}

model Level {
  id             String  @id @default(cuid())
  solutionLink   String  @unique
  solution       Int
  rounds         Round[] @relation("levelRounds")
  fastestRoundId String?
  fastestRound   Round?  @relation("levelFastest", fields: [fastestRoundId], references: [id], onDelete: SetNull)

  @@index([fastestRoundId])
}
